/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

eval("/*! AdminLTE app.js\r\n * ================\r\n * Main JS application file for AdminLTE v2. This file\r\n * should be included in all pages. It controls some layout\r\n * options and implements exclusive AdminLTE plugins.\r\n *\r\n * @Author  Almsaeed Studio\r\n * @Support <http://www.almsaeedstudio.com>\r\n * @Email   <support@almsaeedstudio.com>\r\n * @version 2.3.2\r\n * @license MIT <http://opensource.org/licenses/MIT>\r\n */\r\n\r\n//Make sure jQuery has been loaded before app.js\r\nif (typeof jQuery === \"undefined\") {\r\n  throw new Error(\"AdminLTE requires jQuery\");\r\n}\r\n\r\n/* AdminLTE\r\n *\r\n * @type Object\r\n * @description $.AdminLTE is the main object for the template's app.\r\n *              It's used for implementing functions and options related\r\n *              to the template. Keeping everything wrapped in an object\r\n *              prevents conflict with other plugins and is a better\r\n *              way to organize our code.\r\n */\r\n$.AdminLTE = {};\r\n\r\n/* --------------------\r\n * - AdminLTE Options -\r\n * --------------------\r\n * Modify these options to suit your implementation\r\n */\r\n$.AdminLTE.options = {\r\n  //Add slimscroll to navbar menus\r\n  //This requires you to load the slimscroll plugin\r\n  //in every page before app.js\r\n  navbarMenuSlimscroll: true,\r\n  navbarMenuSlimscrollWidth: \"3px\", //The width of the scroll bar\r\n  navbarMenuHeight: \"200px\", //The height of the inner menu\r\n  //General animation speed for JS animated elements such as box collapse/expand and\r\n  //sidebar treeview slide up/down. This options accepts an integer as milliseconds,\r\n  //'fast', 'normal', or 'slow'\r\n  animationSpeed: 500,\r\n  //Sidebar push menu toggle button selector\r\n  sidebarToggleSelector: \"[data-toggle='offcanvas']\",\r\n  //Activate sidebar push menu\r\n  sidebarPushMenu: true,\r\n  //Activate sidebar slimscroll if the fixed layout is set (requires SlimScroll Plugin)\r\n  sidebarSlimScroll: true,\r\n  //Enable sidebar expand on hover effect for sidebar mini\r\n  //This option is forced to true if both the fixed layout and sidebar mini\r\n  //are used together\r\n  sidebarExpandOnHover: false,\r\n  //BoxRefresh Plugin\r\n  enableBoxRefresh: true,\r\n  //Bootstrap.js tooltip\r\n  enableBSToppltip: true,\r\n  BSTooltipSelector: \"[data-toggle='tooltip']\",\r\n  //Enable Fast Click. Fastclick.js creates a more\r\n  //native touch experience with touch devices. If you\r\n  //choose to enable the plugin, make sure you load the script\r\n  //before AdminLTE's app.js\r\n  enableFastclick: true,\r\n  //Control Sidebar Options\r\n  enableControlSidebar: true,\r\n  controlSidebarOptions: {\r\n    //Which button should trigger the open/close event\r\n    toggleBtnSelector: \"[data-toggle='control-sidebar']\",\r\n    //The sidebar selector\r\n    selector: \".control-sidebar\",\r\n    //Enable slide over content\r\n    slide: true\r\n  },\r\n  //Box Widget Plugin. Enable this plugin\r\n  //to allow boxes to be collapsed and/or removed\r\n  enableBoxWidget: true,\r\n  //Box Widget plugin options\r\n  boxWidgetOptions: {\r\n    boxWidgetIcons: {\r\n      //Collapse icon\r\n      collapse: 'fa-minus',\r\n      //Open icon\r\n      open: 'fa-plus',\r\n      //Remove icon\r\n      remove: 'fa-times'\r\n    },\r\n    boxWidgetSelectors: {\r\n      //Remove button selector\r\n      remove: '[data-widget=\"remove\"]',\r\n      //Collapse button selector\r\n      collapse: '[data-widget=\"collapse\"]'\r\n    }\r\n  },\r\n  //Direct Chat plugin options\r\n  directChat: {\r\n    //Enable direct chat by default\r\n    enable: true,\r\n    //The button to open and close the chat contacts pane\r\n    contactToggleSelector: '[data-widget=\"chat-pane-toggle\"]'\r\n  },\r\n  //Define the set of colors to use globally around the website\r\n  colors: {\r\n    lightBlue: \"#3c8dbc\",\r\n    red: \"#f56954\",\r\n    green: \"#00a65a\",\r\n    aqua: \"#00c0ef\",\r\n    yellow: \"#f39c12\",\r\n    blue: \"#0073b7\",\r\n    navy: \"#001F3F\",\r\n    teal: \"#39CCCC\",\r\n    olive: \"#3D9970\",\r\n    lime: \"#01FF70\",\r\n    orange: \"#FF851B\",\r\n    fuchsia: \"#F012BE\",\r\n    purple: \"#8E24AA\",\r\n    maroon: \"#D81B60\",\r\n    black: \"#222222\",\r\n    gray: \"#d2d6de\"\r\n  },\r\n  //The standard screen sizes that bootstrap uses.\r\n  //If you change these in the variables.less file, change\r\n  //them here too.\r\n  screenSizes: {\r\n    xs: 480,\r\n    sm: 768,\r\n    md: 992,\r\n    lg: 1200\r\n  }\r\n};\r\n\r\n/* ------------------\r\n * - Implementation -\r\n * ------------------\r\n * The next block of code implements AdminLTE's\r\n * functions and plugins as specified by the\r\n * options above.\r\n */\r\n$(function () {\r\n  \"use strict\";\r\n\r\n  //Fix for IE page transitions\r\n  $(\"body\").removeClass(\"hold-transition\");\r\n\r\n  //Extend options if external options exist\r\n  if (typeof AdminLTEOptions !== \"undefined\") {\r\n    $.extend(true,\r\n        $.AdminLTE.options,\r\n        AdminLTEOptions);\r\n  }\r\n\r\n  //Easy access to options\r\n  var o = $.AdminLTE.options;\r\n\r\n  //Set up the object\r\n  _init();\r\n\r\n  //Activate the layout maker\r\n  $.AdminLTE.layout.activate();\r\n\r\n  //Enable sidebar tree view controls\r\n  $.AdminLTE.tree('.sidebar');\r\n\r\n  //Enable control sidebar\r\n  if (o.enableControlSidebar) {\r\n    $.AdminLTE.controlSidebar.activate();\r\n  }\r\n\r\n  //Add slimscroll to navbar dropdown\r\n  if (o.navbarMenuSlimscroll && typeof $.fn.slimscroll != 'undefined') {\r\n    $(\".navbar .menu\").slimscroll({\r\n      height: o.navbarMenuHeight,\r\n      alwaysVisible: false,\r\n      size: o.navbarMenuSlimscrollWidth\r\n    }).css(\"width\", \"100%\");\r\n  }\r\n\r\n  //Activate sidebar push menu\r\n  if (o.sidebarPushMenu) {\r\n    $.AdminLTE.pushMenu.activate(o.sidebarToggleSelector);\r\n  }\r\n\r\n  //Activate Bootstrap tooltip\r\n  if (o.enableBSToppltip) {\r\n    $('body').tooltip({\r\n      selector: o.BSTooltipSelector\r\n    });\r\n  }\r\n\r\n  //Activate box widget\r\n  if (o.enableBoxWidget) {\r\n    $.AdminLTE.boxWidget.activate();\r\n  }\r\n\r\n  //Activate fast click\r\n  if (o.enableFastclick && typeof FastClick != 'undefined') {\r\n    FastClick.attach(document.body);\r\n  }\r\n\r\n  //Activate direct chat widget\r\n  if (o.directChat.enable) {\r\n    $(document).on('click', o.directChat.contactToggleSelector, function () {\r\n      var box = $(this).parents('.direct-chat').first();\r\n      box.toggleClass('direct-chat-contacts-open');\r\n    });\r\n  }\r\n\r\n  /*\r\n   * INITIALIZE BUTTON TOGGLE\r\n   * ------------------------\r\n   */\r\n  $('.btn-group[data-toggle=\"btn-toggle\"]').each(function () {\r\n    var group = $(this);\r\n    $(this).find(\".btn\").on('click', function (e) {\r\n      group.find(\".btn.active\").removeClass(\"active\");\r\n      $(this).addClass(\"active\");\r\n      e.preventDefault();\r\n    });\r\n\r\n  });\r\n});\r\n\r\n/* ----------------------------------\r\n * - Initialize the AdminLTE Object -\r\n * ----------------------------------\r\n * All AdminLTE functions are implemented below.\r\n */\r\nfunction _init() {\r\n  'use strict';\r\n  /* Layout\r\n   * ======\r\n   * Fixes the layout height in case min-height fails.\r\n   *\r\n   * @type Object\r\n   * @usage $.AdminLTE.layout.activate()\r\n   *        $.AdminLTE.layout.fix()\r\n   *        $.AdminLTE.layout.fixSidebar()\r\n   */\r\n  $.AdminLTE.layout = {\r\n    activate: function () {\r\n      var _this = this;\r\n      _this.fix();\r\n      _this.fixSidebar();\r\n      $(window, \".wrapper\").resize(function () {\r\n        _this.fix();\r\n        _this.fixSidebar();\r\n      });\r\n    },\r\n    fix: function () {\r\n      //Get window height and the wrapper height\r\n      var neg = $('.main-header').outerHeight() + $('.main-footer').outerHeight();\r\n      var window_height = $(window).height();\r\n      var sidebar_height = $(\".sidebar\").height();\r\n      //Set the min-height of the content and sidebar based on the\r\n      //the height of the document.\r\n      if ($(\"body\").hasClass(\"fixed\")) {\r\n        $(\".content-wrapper, .right-side\").css('min-height', window_height - $('.main-footer').outerHeight());\r\n      } else {\r\n        var postSetWidth;\r\n        if (window_height >= sidebar_height) {\r\n          $(\".content-wrapper, .right-side\").css('min-height', window_height - neg);\r\n          postSetWidth = window_height - neg;\r\n        } else {\r\n          $(\".content-wrapper, .right-side\").css('min-height', sidebar_height);\r\n          postSetWidth = sidebar_height;\r\n        }\r\n\r\n        //Fix for the control sidebar height\r\n        var controlSidebar = $($.AdminLTE.options.controlSidebarOptions.selector);\r\n        if (typeof controlSidebar !== \"undefined\") {\r\n          if (controlSidebar.height() > postSetWidth)\r\n            $(\".content-wrapper, .right-side\").css('min-height', controlSidebar.height());\r\n        }\r\n\r\n      }\r\n    },\r\n    fixSidebar: function () {\r\n      //Make sure the body tag has the .fixed class\r\n      if (!$(\"body\").hasClass(\"fixed\")) {\r\n        if (typeof $.fn.slimScroll != 'undefined') {\r\n          $(\".sidebar\").slimScroll({destroy: true}).height(\"auto\");\r\n        }\r\n        return;\r\n      } else if (typeof $.fn.slimScroll == 'undefined' && window.console) {\r\n        window.console.error(\"Error: the fixed layout requires the slimscroll plugin!\");\r\n      }\r\n      //Enable slimscroll for fixed layout\r\n      if ($.AdminLTE.options.sidebarSlimScroll) {\r\n        if (typeof $.fn.slimScroll != 'undefined') {\r\n          //Destroy if it exists\r\n          $(\".sidebar\").slimScroll({destroy: true}).height(\"auto\");\r\n          //Add slimscroll\r\n          $(\".sidebar\").slimscroll({\r\n            height: ($(window).height() - $(\".main-header\").height()) + \"px\",\r\n            color: \"rgba(0,0,0,0.2)\",\r\n            size: \"3px\"\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /* PushMenu()\r\n   * ==========\r\n   * Adds the push menu functionality to the sidebar.\r\n   *\r\n   * @type Function\r\n   * @usage: $.AdminLTE.pushMenu(\"[data-toggle='offcanvas']\")\r\n   */\r\n  $.AdminLTE.pushMenu = {\r\n    activate: function (toggleBtn) {\r\n      //Get the screen sizes\r\n      var screenSizes = $.AdminLTE.options.screenSizes;\r\n\r\n      //Enable sidebar toggle\r\n      $(document).on('click', toggleBtn, function (e) {\r\n        e.preventDefault();\r\n\r\n        //Enable sidebar push menu\r\n        if ($(window).width() > (screenSizes.sm - 1)) {\r\n          if ($(\"body\").hasClass('sidebar-collapse')) {\r\n            $(\"body\").removeClass('sidebar-collapse').trigger('expanded.pushMenu');\r\n          } else {\r\n            $(\"body\").addClass('sidebar-collapse').trigger('collapsed.pushMenu');\r\n          }\r\n        }\r\n        //Handle sidebar push menu for small screens\r\n        else {\r\n          if ($(\"body\").hasClass('sidebar-open')) {\r\n            $(\"body\").removeClass('sidebar-open').removeClass('sidebar-collapse').trigger('collapsed.pushMenu');\r\n          } else {\r\n            $(\"body\").addClass('sidebar-open').trigger('expanded.pushMenu');\r\n          }\r\n        }\r\n      });\r\n\r\n      $(\".content-wrapper\").click(function () {\r\n        //Enable hide menu when clicking on the content-wrapper on small screens\r\n        if ($(window).width() <= (screenSizes.sm - 1) && $(\"body\").hasClass(\"sidebar-open\")) {\r\n          $(\"body\").removeClass('sidebar-open');\r\n        }\r\n      });\r\n\r\n      //Enable expand on hover for sidebar mini\r\n      if ($.AdminLTE.options.sidebarExpandOnHover\r\n          || ($('body').hasClass('fixed')\r\n          && $('body').hasClass('sidebar-mini'))) {\r\n        this.expandOnHover();\r\n      }\r\n    },\r\n    expandOnHover: function () {\r\n      var _this = this;\r\n      var screenWidth = $.AdminLTE.options.screenSizes.sm - 1;\r\n      //Expand sidebar on hover\r\n      $('.main-sidebar').hover(function () {\r\n        if ($('body').hasClass('sidebar-mini')\r\n            && $(\"body\").hasClass('sidebar-collapse')\r\n            && $(window).width() > screenWidth) {\r\n          _this.expand();\r\n        }\r\n      }, function () {\r\n        if ($('body').hasClass('sidebar-mini')\r\n            && $('body').hasClass('sidebar-expanded-on-hover')\r\n            && $(window).width() > screenWidth) {\r\n          _this.collapse();\r\n        }\r\n      });\r\n    },\r\n    expand: function () {\r\n      $(\"body\").removeClass('sidebar-collapse').addClass('sidebar-expanded-on-hover');\r\n    },\r\n    collapse: function () {\r\n      if ($('body').hasClass('sidebar-expanded-on-hover')) {\r\n        $('body').removeClass('sidebar-expanded-on-hover').addClass('sidebar-collapse');\r\n      }\r\n    }\r\n  };\r\n\r\n  /* Tree()\r\n   * ======\r\n   * Converts the sidebar into a multilevel\r\n   * tree view menu.\r\n   *\r\n   * @type Function\r\n   * @Usage: $.AdminLTE.tree('.sidebar')\r\n   */\r\n  $.AdminLTE.tree = function (menu) {\r\n    var _this = this;\r\n    var animationSpeed = $.AdminLTE.options.animationSpeed;\r\n    $(menu).on('click', 'li a', function (e) {\r\n      //Get the clicked link and the next element\r\n      var $this = $(this);\r\n      var checkElement = $this.next();\r\n\r\n      //Check if the next element is a menu and is visible\r\n      if ((checkElement.is('.treeview-menu')) && (checkElement.is(':visible')) && (!$('body').hasClass('sidebar-collapse'))) {\r\n        //Close the menu\r\n        checkElement.slideUp(animationSpeed, function () {\r\n          checkElement.removeClass('menu-open');\r\n          //Fix the layout in case the sidebar stretches over the height of the window\r\n          //_this.layout.fix();\r\n        });\r\n        checkElement.parent(\"li\").removeClass(\"active\");\r\n      }\r\n      //If the menu is not visible\r\n      else if ((checkElement.is('.treeview-menu')) && (!checkElement.is(':visible'))) {\r\n        //Get the parent menu\r\n        var parent = $this.parents('ul').first();\r\n        //Close all open menus within the parent\r\n        var ul = parent.find('ul:visible').slideUp(animationSpeed);\r\n        //Remove the menu-open class from the parent\r\n        ul.removeClass('menu-open');\r\n        //Get the parent li\r\n        var parent_li = $this.parent(\"li\");\r\n\r\n        //Open the target menu and add the menu-open class\r\n        checkElement.slideDown(animationSpeed, function () {\r\n          //Add the class active to the parent li\r\n          checkElement.addClass('menu-open');\r\n          parent.find('li.active').removeClass('active');\r\n          parent_li.addClass('active');\r\n          //Fix the layout in case the sidebar stretches over the height of the window\r\n          _this.layout.fix();\r\n        });\r\n      }\r\n      //if this isn't a link, prevent the page from being redirected\r\n      if (checkElement.is('.treeview-menu')) {\r\n        e.preventDefault();\r\n      }\r\n    });\r\n  };\r\n\r\n  /* ControlSidebar\r\n   * ==============\r\n   * Adds functionality to the right sidebar\r\n   *\r\n   * @type Object\r\n   * @usage $.AdminLTE.controlSidebar.activate(options)\r\n   */\r\n  $.AdminLTE.controlSidebar = {\r\n    //instantiate the object\r\n    activate: function () {\r\n      //Get the object\r\n      var _this = this;\r\n      //Update options\r\n      var o = $.AdminLTE.options.controlSidebarOptions;\r\n      //Get the sidebar\r\n      var sidebar = $(o.selector);\r\n      //The toggle button\r\n      var btn = $(o.toggleBtnSelector);\r\n\r\n      //Listen to the click event\r\n      btn.on('click', function (e) {\r\n        e.preventDefault();\r\n        //If the sidebar is not open\r\n        if (!sidebar.hasClass('control-sidebar-open')\r\n            && !$('body').hasClass('control-sidebar-open')) {\r\n          //Open the sidebar\r\n          _this.open(sidebar, o.slide);\r\n        } else {\r\n          _this.close(sidebar, o.slide);\r\n        }\r\n      });\r\n\r\n      //If the body has a boxed layout, fix the sidebar bg position\r\n      var bg = $(\".control-sidebar-bg\");\r\n      _this._fix(bg);\r\n\r\n      //If the body has a fixed layout, make the control sidebar fixed\r\n      if ($('body').hasClass('fixed')) {\r\n        _this._fixForFixed(sidebar);\r\n      } else {\r\n        //If the content height is less than the sidebar's height, force max height\r\n        if ($('.content-wrapper, .right-side').height() < sidebar.height()) {\r\n          _this._fixForContent(sidebar);\r\n        }\r\n      }\r\n    },\r\n    //Open the control sidebar\r\n    open: function (sidebar, slide) {\r\n      //Slide over content\r\n      if (slide) {\r\n        sidebar.addClass('control-sidebar-open');\r\n      } else {\r\n        //Push the content by adding the open class to the body instead\r\n        //of the sidebar itself\r\n        $('body').addClass('control-sidebar-open');\r\n      }\r\n    },\r\n    //Close the control sidebar\r\n    close: function (sidebar, slide) {\r\n      if (slide) {\r\n        sidebar.removeClass('control-sidebar-open');\r\n      } else {\r\n        $('body').removeClass('control-sidebar-open');\r\n      }\r\n    },\r\n    _fix: function (sidebar) {\r\n      var _this = this;\r\n      if ($(\"body\").hasClass('layout-boxed')) {\r\n        sidebar.css('position', 'absolute');\r\n        sidebar.height($(\".wrapper\").height());\r\n        $(window).resize(function () {\r\n          _this._fix(sidebar);\r\n        });\r\n      } else {\r\n        sidebar.css({\r\n          'position': 'fixed',\r\n          'height': 'auto'\r\n        });\r\n      }\r\n    },\r\n    _fixForFixed: function (sidebar) {\r\n      sidebar.css({\r\n        'position': 'fixed',\r\n        'max-height': '100%',\r\n        'overflow': 'auto',\r\n        'padding-bottom': '50px'\r\n      });\r\n    },\r\n    _fixForContent: function (sidebar) {\r\n      $(\".content-wrapper, .right-side\").css('min-height', sidebar.height());\r\n    }\r\n  };\r\n\r\n  /* BoxWidget\r\n   * =========\r\n   * BoxWidget is a plugin to handle collapsing and\r\n   * removing boxes from the screen.\r\n   *\r\n   * @type Object\r\n   * @usage $.AdminLTE.boxWidget.activate()\r\n   *        Set all your options in the main $.AdminLTE.options object\r\n   */\r\n  $.AdminLTE.boxWidget = {\r\n    selectors: $.AdminLTE.options.boxWidgetOptions.boxWidgetSelectors,\r\n    icons: $.AdminLTE.options.boxWidgetOptions.boxWidgetIcons,\r\n    animationSpeed: $.AdminLTE.options.animationSpeed,\r\n    activate: function (_box) {\r\n      var _this = this;\r\n      if (!_box) {\r\n        _box = document; // activate all boxes per default\r\n      }\r\n      //Listen for collapse event triggers\r\n      $(_box).on('click', _this.selectors.collapse, function (e) {\r\n        e.preventDefault();\r\n        _this.collapse($(this));\r\n      });\r\n\r\n      //Listen for remove event triggers\r\n      $(_box).on('click', _this.selectors.remove, function (e) {\r\n        e.preventDefault();\r\n        _this.remove($(this));\r\n      });\r\n    },\r\n    collapse: function (element) {\r\n      var _this = this;\r\n      //Find the box parent\r\n      var box = element.parents(\".box\").first();\r\n      //Find the body and the footer\r\n      var box_content = box.find(\"> .box-body, > .box-footer, > form  >.box-body, > form > .box-footer\");\r\n      if (!box.hasClass(\"collapsed-box\")) {\r\n        //Convert minus into plus\r\n        element.children(\":first\")\r\n            .removeClass(_this.icons.collapse)\r\n            .addClass(_this.icons.open);\r\n        //Hide the content\r\n        box_content.slideUp(_this.animationSpeed, function () {\r\n          box.addClass(\"collapsed-box\");\r\n        });\r\n      } else {\r\n        //Convert plus into minus\r\n        element.children(\":first\")\r\n            .removeClass(_this.icons.open)\r\n            .addClass(_this.icons.collapse);\r\n        //Show the content\r\n        box_content.slideDown(_this.animationSpeed, function () {\r\n          box.removeClass(\"collapsed-box\");\r\n        });\r\n      }\r\n    },\r\n    remove: function (element) {\r\n      //Find the box parent\r\n      var box = element.parents(\".box\").first();\r\n      box.slideUp(this.animationSpeed);\r\n    }\r\n  };\r\n}\r\n\r\n/* ------------------\r\n * - Custom Plugins -\r\n * ------------------\r\n * All custom plugins are defined below.\r\n */\r\n\r\n/*\r\n * BOX REFRESH BUTTON\r\n * ------------------\r\n * This is a custom plugin to use with the component BOX. It allows you to add\r\n * a refresh button to the box. It converts the box's state to a loading state.\r\n *\r\n * @type plugin\r\n * @usage $(\"#box-widget\").boxRefresh( options );\r\n */\r\n(function ($) {\r\n\r\n  \"use strict\";\r\n\r\n  $.fn.boxRefresh = function (options) {\r\n\r\n    // Render options\r\n    var settings = $.extend({\r\n      //Refresh button selector\r\n      trigger: \".refresh-btn\",\r\n      //File source to be loaded (e.g: ajax/src.php)\r\n      source: \"\",\r\n      //Callbacks\r\n      onLoadStart: function (box) {\r\n        return box;\r\n      }, //Right after the button has been clicked\r\n      onLoadDone: function (box) {\r\n        return box;\r\n      } //When the source has been loaded\r\n\r\n    }, options);\r\n\r\n    //The overlay\r\n    var overlay = $('<div class=\"overlay\"><div class=\"fa fa-refresh fa-spin\"></div></div>');\r\n\r\n    return this.each(function () {\r\n      //if a source is specified\r\n      if (settings.source === \"\") {\r\n        if (window.console) {\r\n          window.console.log(\"Please specify a source first - boxRefresh()\");\r\n        }\r\n        return;\r\n      }\r\n      //the box\r\n      var box = $(this);\r\n      //the button\r\n      var rBtn = box.find(settings.trigger).first();\r\n\r\n      //On trigger click\r\n      rBtn.on('click', function (e) {\r\n        e.preventDefault();\r\n        //Add loading overlay\r\n        start(box);\r\n\r\n        //Perform ajax call\r\n        box.find(\".box-body\").load(settings.source, function () {\r\n          done(box);\r\n        });\r\n      });\r\n    });\r\n\r\n    function start(box) {\r\n      //Add overlay and loading img\r\n      box.append(overlay);\r\n\r\n      settings.onLoadStart.call(box);\r\n    }\r\n\r\n    function done(box) {\r\n      //Remove overlay and loading img\r\n      box.find(overlay).remove();\r\n\r\n      settings.onLoadDone.call(box);\r\n    }\r\n\r\n  };\r\n\r\n})(jQuery);\r\n\r\n /*\r\n * EXPLICIT BOX CONTROLS\r\n * -----------------------\r\n * This is a custom plugin to use with the component BOX. It allows you to activate\r\n * a box inserted in the DOM after the app.js was loaded, toggle and remove box.\r\n *\r\n * @type plugin\r\n * @usage $(\"#box-widget\").activateBox();\r\n * @usage $(\"#box-widget\").toggleBox();\r\n * @usage $(\"#box-widget\").removeBox();\r\n */\r\n(function ($) {\r\n\r\n  'use strict';\r\n\r\n  $.fn.activateBox = function () {\r\n    $.AdminLTE.boxWidget.activate(this);\r\n  };\r\n\r\n  $.fn.toggleBox = function(){\r\n    var button = $($.AdminLTE.boxWidget.selectors.collapse, this);\r\n    $.AdminLTE.boxWidget.collapse(button);\r\n  };\r\n\r\n  $.fn.removeBox = function(){\r\n    var button = $($.AdminLTE.boxWidget.selectors.remove, this);\r\n    $.AdminLTE.boxWidget.remove(button);\r\n  };\r\n\r\n})(jQuery);\r\n\r\n/*\r\n * TODO LIST CUSTOM PLUGIN\r\n * -----------------------\r\n * This plugin depends on iCheck plugin for checkbox and radio inputs\r\n *\r\n * @type plugin\r\n * @usage $(\"#todo-widget\").todolist( options );\r\n */\r\n(function ($) {\r\n\r\n  'use strict';\r\n\r\n  $.fn.todolist = function (options) {\r\n    // Render options\r\n    var settings = $.extend({\r\n      //When the user checks the input\r\n      onCheck: function (ele) {\r\n        return ele;\r\n      },\r\n      //When the user unchecks the input\r\n      onUncheck: function (ele) {\r\n        return ele;\r\n      }\r\n    }, options);\r\n\r\n    return this.each(function () {\r\n\r\n      if (typeof $.fn.iCheck != 'undefined') {\r\n        $('input', this).on('ifChecked', function () {\r\n          var ele = $(this).parents(\"li\").first();\r\n          ele.toggleClass(\"done\");\r\n          settings.onCheck.call(ele);\r\n        });\r\n\r\n        $('input', this).on('ifUnchecked', function () {\r\n          var ele = $(this).parents(\"li\").first();\r\n          ele.toggleClass(\"done\");\r\n          settings.onUncheck.call(ele);\r\n        });\r\n      } else {\r\n        $('input', this).on('change', function () {\r\n          var ele = $(this).parents(\"li\").first();\r\n          ele.toggleClass(\"done\");\r\n          if ($('input', ele).is(\":checked\")) {\r\n            settings.onCheck.call(ele);\r\n          } else {\r\n            settings.onUncheck.call(ele);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n}(jQuery));\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }
/******/ ]);